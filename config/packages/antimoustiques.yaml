homeassistant:
  customize:
    switch.antimoustiques_bureau:
      device_class: outlet
    switch.antimoustiques_chambre:
      device_class: outlet
    switch.antimoustiques_salon:
      device_class: outlet

input_boolean:
  moustiques_periode:
    name: PÃ©riode des moustiques
  antimoustiques_mode_auto:
    name: Antimoustiques Automatiques
  autimoustiques_use_sunset_sunrise:
    name: Utiliser lever/coucher du soleil
  autimoustiques_use_hours:
    name: Utiliser heures

input_datetime:
  antimoustiques_start_time:
    name: Heure d'allumage
    icon: mdi:timer
    has_date: false
    has_time: true
  antimoustiques_stop_time:
    name: Heure d'extinction
    icon: mdi:timer
    has_date: false
    has_time: true

switch:
  - platform: template
    switches:
      antimoustiques_bureau:
        friendly_name: Antimoustiques Bureau
        value_template: "{{ is_state('switch.plug_osram_01', 'on') }}"
        turn_on:
          service: switch.turn_on
          target:
            entity_id: switch.plug_osram_01
        turn_off:
          service: switch.turn_off
          target:
            entity_id: switch.plug_osram_01
      antimoustiques_chambre:
        friendly_name: Antimoustiques Chambre
        value_template: "{{ is_state('switch.plug_osram_02', 'on') }}"
        turn_on:
          service: switch.turn_on
          target:
            entity_id: switch.plug_osram_02
        turn_off:
          service: switch.turn_off
          target:
            entity_id: switch.plug_osram_02
      antimoustiques_salon:
        friendly_name: Antimoustiques Salon
        value_template: "{{ is_state('switch.plug_osram_03', 'on') }}"
        turn_on:
          service: switch.turn_on
          target:
            entity_id: switch.plug_osram_03
        turn_off:
          service: switch.turn_off
          target:
            entity_id: switch.plug_osram_03

automation:
  - id: "antimoustiques_use_sunset_sunrise_off_hours"
    trigger:
      - platform: state
        entity_id: input_boolean.autimoustiques_use_sunset_sunrise
        from: "off"
        to: "on"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.autimoustiques_use_hours
  - id: "antimoustiques_use_hours_off_sunset_sunrise"
    trigger:
      - platform: state
        entity_id: input_boolean.autimoustiques_use_hours
        from: "off"
        to: "on"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.autimoustiques_use_sunset_sunrise
  - id: "antimoustique_chambre_on_off"
    trigger:
      - platform: state
        entity_id: binary_sensor.sensor_magnet_window_chambre
      - platform: sun
        event: sunset
      - platform: sun
        event: sunrise
      - platform: time
        at: input_datetime.antimoustiques_start_time
      - platform: time
        at: input_datetime.antimoustiques_stop_time
      - platform: state
        entity_id: alarm_control_panel.alarme
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.moustiques_periode
          state: "on"
    action:
      - choose:
          - conditions: # Use sunset sunrise
              - condition: and
                conditions:
                  - condition: state
                    entity_id: input_boolean.autimoustiques_use_sunset_sunrise
                    state: "on"
                  - condition: state
                    entity_id: input_boolean.autimoustiques_use_hours
                    state: "off"
            sequence:
              - choose:
                  - conditions: # On
                      - condition: state
                        entity_id: sun.sun
                        state: "below_horizon"
                      - condition: state
                        entity_id: binary_sensor.sensor_magnet_window_chambre
                        state: "on"
                      - condition: not
                        conditions:
                          - condition: or
                            conditions:
                              - condition: state
                                entity_id: alarm_control_panel.alarme
                                state: "armed_away"
                              - condition: state
                                entity_id: alarm_control_panel.alarme
                                state: "triggered"
                    sequence:
                      - service: switch.turn_on
                        target:
                          entity_id: switch.antimoustiques_chambre
                  - conditions: # Off
                      - condition: or
                        conditions:
                          - condition: state
                            entity_id: sun.sun
                            state: "above_horizon"
                          - condition: state
                            entity_id: binary_sensor.sensor_magnet_window_chambre
                            state: "off"
                    sequence:
                      - service: switch.turn_off
                        target:
                          entity_id: switch.antimoustiques_chambre
          - conditions: # Use hours
              - condition: and
                conditions:
                  - condition: state
                    entity_id: input_boolean.autimoustiques_use_sunset_sunrise
                    state: "off"
                  - condition: state
                    entity_id: input_boolean.autimoustiques_use_hours
                    state: "on"
            sequence:
              - choose:
                  - conditions: # On
                      - condition: and
                        conditions:
                          - condition: template
                            value_template: >-
                              {% if state_attr('input_datetime.antimoustiques_start_time', 'timestamp') > state_attr('input_datetime.antimoustiques_stop_time', 'timestamp') -%}
                              {{ (states('sensor.time') > ((state_attr('input_datetime.antimoustiques_start_time', 'timestamp') -60 ) | timestamp_custom('%H:%M', False))) and (states('sensor.time') > ((state_attr('input_datetime.antimoustiques_stop_time', 'timestamp') - 60) | timestamp_custom('%H:%M', False))) }}
                              {%- else -%}
                              {{ (states('sensor.time') > ((state_attr('input_datetime.antimoustiques_start_time', 'timestamp') -60 ) | timestamp_custom('%H:%M', False))) and (states('sensor.time') <= ((state_attr('input_datetime.antimoustiques_stop_time', 'timestamp') - 60) | timestamp_custom('%H:%M', False))) }}
                              {%- endif %}
                          - condition: state
                            entity_id: binary_sensor.sensor_magnet_window_chambre
                            state: "on"
                          - condition: not
                            conditions:
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: alarm_control_panel.alarme
                                    state: "armed_away"
                                  - condition: state
                                    entity_id: alarm_control_panel.alarme
                                    state: "triggered"
                    sequence:
                      - service: switch.turn_on
                        target:
                          entity_id: switch.antimoustiques_chambre
                  - conditions: # Off
                      - condition: or
                        conditions:
                          - condition: template
                            value_template: >-
                              {% if state_attr('input_datetime.antimoustiques_start_time', 'timestamp') > state_attr('input_datetime.antimoustiques_stop_time', 'timestamp') -%}
                              {{ (states('sensor.time') <= ((state_attr('input_datetime.antimoustiques_start_time', 'timestamp') -60 ) | timestamp_custom('%H:%M', False))) or (states('sensor.time') < ((state_attr('input_datetime.antimoustiques_stop_time', 'timestamp') - 60) | timestamp_custom('%H:%M', False))) }}
                              {%- else -%}
                              {{ (states('sensor.time') < ((state_attr('input_datetime.antimoustiques_start_time', 'timestamp') -60 ) | timestamp_custom('%H:%M', False))) or (states('sensor.time') > ((state_attr('input_datetime.antimoustiques_stop_time', 'timestamp') - 60) | timestamp_custom('%H:%M', False))) }}
                              {%- endif %}
                          - condition: state
                            entity_id: binary_sensor.sensor_magnet_window_chambre
                            state: "off"
                          - condition: state
                            entity_id: alarm_control_panel.alarme
                            state: "armed_away"
                    sequence:
                      - service: switch.turn_off
                        target:
                          entity_id: switch.antimoustiques_chambre
